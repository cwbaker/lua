
for _, forge in toolsets('cc.*') do
    local forge = forge:inherit {
        warning_level = 0;
    };

    forge:StaticLibrary '${lib}/liblua_${platform}_${architecture}' {
        forge:Cc '${obj}/%1' {
            defines = switch { 
                operating_system();
                linux = { 'LUA_USE_POSIX', 'LUA_USE_DLOPEN' };
                macos = { 'LUA_USE_POSIX', 'LUA_USE_DLOPEN' };
                windows = { '_CRT_SECURE_NO_DEPRECATE' };
            };
            'lapi.c',
            'lauxlib.c',
            'lbaselib.c',
            'lbitlib.c',
            'lcode.c',
            'lcorolib.c',
            'lctype.c',
            'ldblib.c',
            'ldebug.c',
            'ldo.c',
            'ldump.c',
            'lfunc.c',
            'lgc.c',
            'linit.c',
            'liolib.c',
            'llex.c',
            'lmathlib.c',
            'lmem.c',
            'loadlib.c',
            'lobject.c',
            'lopcodes.c',
            'loslib.c',
            'lparser.c',
            'lstate.c',
            'lstring.c',
            'lstrlib.c',
            'ltable.c',
            'ltablib.c',
            'ltm.c',
            'lundump.c',
            'lutf8lib.c',
            'lvm.c',
            'lzio.c'
        };
    };
end

for _, forge in toolsets('cc.*') do
    if forge:platform_matches('macos') or forge:platform_matches('windows') then
        local forge = forge:inherit {
            warning_level = 0;
        };
        forge:all {
            forge:Executable '${bin}/luac' {
                '${lib}/liblua_${architecture}';
                forge:Cc '${obj}/%1' {
                    defines = { '_CRT_SECURE_NO_DEPRECATE' };
                    'luac.c'
                };
            };        

            forge:Executable '${bin}/lua' {
                '${lib}/liblua_${architecture}';
                forge:Cc '${obj}/%1' {
                    defines = { '_CRT_SECURE_NO_DEPRECATE' };
                    'lua.c'
                };
            };
        };
    end
end
